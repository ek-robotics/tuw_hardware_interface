<launch>

  <!-- set spawn_controllers flag (true / false) -->
  <arg name="spawn_controllers" default="true"/>

  <!-- set mode flat (position /velocity / effort) -->
  <arg name="mode" default="position"/>

  <!-- set debug flag (true / false) -->
  <arg name="debug" default="false"/>

  <!-- load robot description -->
  <arg name="model" default="$(find tuw_hardware_interface_dynamixel)/urdf/simple_dynamixel_robot.xml"/>
  <param name="robot_description" command="$(find xacro)/xacro $(arg model)"/>

  <!-- load rosparam (param in yaml files) depending on debug flag -->
  <rosparam param="dynamixel_hardware_interface_setup" subst_value="True">
    "$(find tuw_hardware_interface_dynamixel)/config/setup/dynamixel_test_setup.yaml"
  </rosparam>
  <rosparam file="$(find tuw_hardware_interface_dynamixel)/config/controller/dynamixel_test_setup.yaml" command="load"/>

  <!-- start tuw_dynamixel_ros_control_node -->
  <node name="tuw_hardware_interface_dynamixel_node"
        pkg="tuw_hardware_interface_dynamixel"
        type="tuw_hardware_interface_dynamixel_node"
        output="screen"/>

  <!-- set arguments to start controllers depending on mode flag and debug flag-->
  <arg if="$(eval arg('mode') == 'position')" name="controllers_arg" value="position_controller"/>
  <arg if="$(eval arg('mode') == 'velocity')" name="controllers_arg" value="velocity_controller"/>
  <arg if="$(eval arg('mode') == 'effort')"   name="controllers_arg" value="effort_controller"/>

  <!-- start controllers depending on spawn_controller flag -->
  <node if="$(arg spawn_controllers)"
        ns="/controller"
        name="controller_starter"
        pkg="controller_manager"
        type="controller_manager"
        output="log"
        args="spawn joint_state_controller $(arg controllers_arg)"/>

  <!-- set logging level to debug if flag is set -->
  <group if="$(arg debug)" >
    <node pkg="rosservice" type="rosservice" name="set_logger_level_ros" args="call /tuw_dynamixel_hardware_interface_node/set_logger_level '{logger: 'ros', level: 'DEBUG'}'"/>
    <node pkg="rosservice" type="rosservice" name="set_logger_level_rosout" args="call /tuw_dynamixel_hardware_interface_node/set_logger_level '{logger: 'rosout', level: 'DEBUG'}'"/>
  </group>

</launch>
